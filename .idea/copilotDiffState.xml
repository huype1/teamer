<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/frontend/src/pages/ProjectDocumentsPage.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/frontend/src/pages/ProjectDocumentsPage.tsx" />
              <option name="originalContent" value="import React, { useState, useEffect, useCallback } from &quot;react&quot;;&#10;import { useParams, useNavigate } from &quot;react-router-dom&quot;;&#10;import { Button } from &quot;@/components/ui/button&quot;;&#10;import { Card, CardContent } from &quot;@/components/ui/card&quot;;&#10;import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from &quot;@/components/ui/dialog&quot;;&#10;import { Input } from &quot;@/components/ui/input&quot;;&#10;import { Label } from &quot;@/components/ui/label&quot;;&#10;import { Textarea } from &quot;@/components/ui/textarea&quot;;&#10;import documentService from &quot;@/service/documentService&quot;;&#10;import { toastError, toastSuccess } from &quot;@/utils/toast&quot;;&#10;import type { DocumentListResponse } from &quot;@/types/document&quot;;&#10;import { Plus, Edit, FileText } from &quot;lucide-react&quot;;&#10;import { LoadingSpinner } from &quot;@/components/ui/loading-spinner&quot;;&#10;import { useSelector } from &quot;react-redux&quot;;&#10;import type { RootState } from &quot;@/store&quot;;&#10;import { canEditItem, canCreateItem } from &quot;@/utils/permissionHelpers&quot;;&#10;&#10;const ProjectDocumentsPage = () =&gt; {&#10;  const { projectId } = useParams&lt;{ projectId: string }&gt;();&#10;  const navigate = useNavigate();&#10;  const { user } = useSelector((state: RootState) =&gt; state.auth);&#10;  &#10;  const [documents, setDocuments] = useState&lt;DocumentListResponse[]&gt;([]);&#10;  const [loading, setLoading] = useState(true);&#10;  const [isDialogOpen, setIsDialogOpen] = useState(false);&#10;  const [formData, setFormData] = useState({ title: &quot;&quot;, content: &quot;&quot; });&#10;  &#10;  const fetchDocuments = useCallback(async () =&gt; {&#10;    if (!projectId) return;&#10;    &#10;    try {&#10;      setLoading(true);&#10;      const response = await documentService.getDocumentsByProject(projectId);&#10;      // Backend trả về ApiResponse&lt;List&lt;DocumentListResponse&gt;&gt; nên cần truy cập response.result&#10;      setDocuments(response.result);&#10;    } catch (error) {&#10;      console.error(&quot;Error:&quot;, error);&#10;      toastError(&quot;Không thể tải tài liệu!&quot;);&#10;    } finally {&#10;      setLoading(false);&#10;    }&#10;  }, [projectId]);&#10;  &#10;  const handleSubmit = async (e: React.FormEvent) =&gt; {&#10;    e.preventDefault();&#10;    if (!projectId) return;&#10;    &#10;    try {&#10;      setLoading(true);&#10;      await documentService.createDocument({&#10;        ...formData,&#10;        projectId&#10;      });&#10;      toastSuccess(&quot;Tạo tài liệu thành công!&quot;);&#10;      setFormData({ title: &quot;&quot;, content: &quot;&quot; });&#10;      setIsDialogOpen(false);&#10;      fetchDocuments();&#10;    } catch (error) {&#10;      console.error(&quot;Error:&quot;, error);&#10;      toastError(&quot;Có lỗi xảy ra!&quot;);&#10;    } finally {&#10;      setLoading(false);&#10;    }&#10;  };&#10;  &#10;  const handleEditDocument = (documentId: string) =&gt; {&#10;    navigate(`/documents/${documentId}/edit`);&#10;  };&#10;&#10;  const handleViewDocument = (documentId: string) =&gt; {&#10;    navigate(`/documents/${documentId}/edit`);&#10;  };&#10;  &#10;        {canCreateItem(user, projectId) &amp;&amp; (&#10;          &lt;Button onClick={() =&gt; setIsDialogOpen(true)}&gt;&#10;            &lt;Plus className=&quot;h-4 w-4 mr-2&quot; /&gt;&#10;            Tạo tài liệu mới&#10;          &lt;/Button&gt;&#10;        )}&#10;      &lt;/div&gt;&#10;      &#10;      {documents.length === 0 ? (&#10;        &lt;Card&gt;&#10;          &lt;CardContent className=&quot;flex flex-col items-center justify-center py-12&quot;&gt;&#10;            &lt;FileText className=&quot;h-12 w-12 text-gray-400 mb-4&quot; /&gt;&#10;            &lt;h3 className=&quot;text-lg font-medium text-gray-900 mb-2&quot;&gt;Chưa có tài liệu nào&lt;/h3&gt;&#10;            &lt;p className=&quot;text-gray-500 mb-4&quot;&gt;Tạo tài liệu đầu tiên để bắt đầu&lt;/p&gt;&#10;            {canCreateItem(user, projectId) &amp;&amp; (&#10;              &lt;Button onClick={() =&gt; setIsDialogOpen(true)}&gt;&#10;                &lt;Plus className=&quot;h-4 w-4 mr-2&quot; /&gt;&#10;                Tạo tài liệu&#10;              &lt;/Button&gt;&#10;            )}&#10;          &lt;/CardContent&gt;&#10;        &lt;/Card&gt;&#10;      ) : (&#10;        &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4&quot;&gt;&#10;          {documents.map((document) =&gt; (&#10;            &lt;Card key={document.id} className=&quot;hover:shadow-md transition-shadow&quot;&gt;&#10;              &lt;CardContent className=&quot;p-6&quot;&gt;&#10;                &lt;div className=&quot;flex items-start justify-between&quot;&gt;&#10;                  &lt;div className=&quot;flex-1&quot;&gt;&#10;                    &lt;h3 &#10;                      className=&quot;font-semibold text-lg mb-2 cursor-pointer hover:text-blue-600 transition-colors&quot;&#10;                      onClick={() =&gt; handleViewDocument(document.id)}&#10;                    &gt;&#10;                      {document.title}&#10;                    &lt;/h3&gt;&#10;                    &lt;p className=&quot;text-gray-600 text-sm mb-4 line-clamp-2&quot;&gt;&#10;                      Tài liệu được tạo vào {new Date(document.createdAt).toLocaleDateString()}&#10;                    &lt;/p&gt;&#10;                    &lt;div className=&quot;flex items-center text-xs text-gray-500&quot;&gt;&#10;                      &lt;span&gt;Tạo bởi: {document.creator.name}&lt;/span&gt;&#10;                      &lt;span className=&quot;mx-2&quot;&gt;•&lt;/span&gt;&#10;                      &lt;span&gt;{new Date(document.createdAt).toLocaleDateString()}&lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;flex gap-2 mt-4&quot;&gt;&#10;                  &lt;Button&#10;                    variant=&quot;outline&quot;&#10;                    size=&quot;sm&quot;&#10;                    onClick={() =&gt; handleViewDocument(document.id)}&#10;                    className=&quot;flex-1&quot;&#10;                  &gt;&#10;                    &lt;FileText className=&quot;h-4 w-4 mr-2&quot; /&gt;&#10;                    Xem&#10;                  &lt;/Button&gt;&#10;                  {canEditItem(user, document.creator.id) &amp;&amp; (&#10;                    &lt;Button&#10;                      variant=&quot;outline&quot;&#10;                      size=&quot;sm&quot;&#10;                      onClick={() =&gt; handleEditDocument(document.id)}&#10;                      className=&quot;flex-1&quot;&#10;                    &gt;&#10;                  &lt;Button&#10;                    variant=&quot;outline&quot;&#10;                    size=&quot;sm&quot;&#10;                    onClick={() =&gt; handleViewDocument(document.id)}&#10;                    className=&quot;flex-1&quot;&#10;                  &gt;&#10;                    &lt;FileText className=&quot;h-4 w-4 mr-2&quot; /&gt;&#10;                    Xem&#10;                  &lt;/Button&gt;&#10;                value={formData.title}&#10;                onChange={(e) =&gt; setFormData({ ...formData, title: e.target.value })}&#10;                placeholder=&quot;Nhập tiêu đề tài liệu&quot;&#10;                required&#10;              /&gt;&#10;            &lt;/div&gt;&#10;            &#10;            &lt;div&gt;&#10;              &lt;Label htmlFor=&quot;content&quot;&gt;Nội dung&lt;/Label&gt;&#10;              &lt;Textarea&#10;                id=&quot;content&quot;&#10;                value={formData.content}&#10;                onChange={(e) =&gt; setFormData({ ...formData, content: e.target.value })}&#10;                placeholder=&quot;Nhập nội dung tài liệu&quot;&#10;                rows={3}&#10;              /&gt;&#10;            &lt;/div&gt;&#10;            &#10;            &lt;DialogFooter&gt;&#10;              &lt;Button type=&quot;submit&quot; disabled={loading}&gt;&#10;                {loading ? &quot;Đang tạo...&quot; : &quot;Tạo tài liệu&quot;}&#10;              &lt;/Button&gt;&#10;              &lt;Button type=&quot;button&quot; variant=&quot;outline&quot; onClick={() =&gt; setIsDialogOpen(false)}&gt;&#10;                Hủy&#10;              &lt;/Button&gt;&#10;            &lt;/DialogFooter&gt;&#10;          &lt;/form&gt;&#10;        &lt;/DialogContent&gt;&#10;      &lt;/Dialog&gt;&#10;    &lt;/div&gt;&#10;  );&#10;};&#10;&#10;export default ProjectDocumentsPage;" />
              <option name="updatedContent" value="import React, { useState, useEffect, useCallback } from &quot;react&quot;;&#13;&#10;import { useParams, useNavigate } from &quot;react-router-dom&quot;;&#13;&#10;import { Button } from &quot;@/components/ui/button&quot;;&#13;&#10;import { Card, CardContent } from &quot;@/components/ui/card&quot;;&#13;&#10;import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from &quot;@/components/ui/dialog&quot;;&#13;&#10;import { Input } from &quot;@/components/ui/input&quot;;&#13;&#10;import { Label } from &quot;@/components/ui/label&quot;;&#13;&#10;import { Textarea } from &quot;@/components/ui/textarea&quot;;&#13;&#10;import documentService from &quot;@/service/documentService&quot;;&#13;&#10;import { toastError, toastSuccess } from &quot;@/utils/toast&quot;;&#13;&#10;import type { DocumentListResponse } from &quot;@/types/document&quot;;&#13;&#10;import { Plus, Edit, FileText, Trash2 } from &quot;lucide-react&quot;;&#13;&#10;import { LoadingSpinner } from &quot;@/components/ui/loading-spinner&quot;;&#13;&#10;import { useSelector } from &quot;react-redux&quot;;&#13;&#10;import type { RootState } from &quot;@/store&quot;;&#13;&#10;import { canEditItem, canCreateItem } from &quot;@/utils/permissionHelpers&quot;;&#13;&#10;&#13;&#10;const ProjectDocumentsPage = () =&gt; {&#13;&#10;  const { projectId } = useParams&lt;{ projectId: string }&gt;();&#13;&#10;  const navigate = useNavigate();&#13;&#10;  const { user } = useSelector((state: RootState) =&gt; state.auth);&#13;&#10;  &#13;&#10;  const [documents, setDocuments] = useState&lt;DocumentListResponse[]&gt;([]);&#13;&#10;  const [loading, setLoading] = useState(true);&#13;&#10;  const [isDialogOpen, setIsDialogOpen] = useState(false);&#13;&#10;  const [formData, setFormData] = useState({ title: &quot;&quot;, content: &quot;&quot; });&#13;&#10;  &#13;&#10;  const fetchDocuments = useCallback(async () =&gt; {&#13;&#10;    if (!projectId) return;&#13;&#10;    &#13;&#10;    try {&#13;&#10;      setLoading(true);&#13;&#10;      const response = await documentService.getDocumentsByProject(projectId);&#13;&#10;      // Backend trả về ApiResponse&lt;List&lt;DocumentListResponse&gt;&gt; nên cần truy cập response.result&#13;&#10;      setDocuments(response.result);&#13;&#10;    } catch (error) {&#13;&#10;      console.error(&quot;Error:&quot;, error);&#13;&#10;      toastError(&quot;Không thể tải tài liệu!&quot;);&#13;&#10;    } finally {&#13;&#10;      setLoading(false);&#13;&#10;    }&#13;&#10;  }, [projectId]);&#13;&#10;  &#13;&#10;  const handleSubmit = async (e: React.FormEvent) =&gt; {&#13;&#10;    e.preventDefault();&#13;&#10;    if (!projectId) return;&#13;&#10;    &#13;&#10;    try {&#13;&#10;      setLoading(true);&#13;&#10;      await documentService.createDocument({&#13;&#10;        ...formData,&#13;&#10;        projectId&#13;&#10;      });&#13;&#10;      toastSuccess(&quot;Tạo tài liệu thành công!&quot;);&#13;&#10;      setFormData({ title: &quot;&quot;, content: &quot;&quot; });&#13;&#10;      setIsDialogOpen(false);&#13;&#10;      fetchDocuments();&#13;&#10;    } catch (error) {&#13;&#10;      console.error(&quot;Error:&quot;, error);&#13;&#10;      toastError(&quot;Có lỗi xảy ra!&quot;);&#13;&#10;    } finally {&#13;&#10;      setLoading(false);&#13;&#10;    }&#13;&#10;  };&#13;&#10;  &#13;&#10;  const handleEditDocument = (documentId: string) =&gt; {&#13;&#10;    navigate(`/documents/${documentId}/edit`);&#13;&#10;  };&#13;&#10;&#13;&#10;  const handleViewDocument = (documentId: string) =&gt; {&#13;&#10;    navigate(`/documents/${documentId}/edit`);&#13;&#10;  };&#13;&#10;  &#13;&#10;  // Delete document handler&#13;&#10;  const handleDeleteDocument = async (documentId: string) =&gt; {&#13;&#10;    if (!window.confirm(&quot;Bạn có chắc chắn muốn xóa tài liệu này?&quot;)) return;&#13;&#10;    try {&#13;&#10;      setLoading(true);&#13;&#10;      await documentService.deleteDocument(documentId);&#13;&#10;      toastSuccess(&quot;Xóa tài liệu thành công!&quot;);&#13;&#10;      fetchDocuments();&#13;&#10;    } catch (error) {&#13;&#10;      console.error(&quot;Delete failed:&quot;, error);&#13;&#10;      toastError(&quot;Xóa tài liệu thất bại!&quot;);&#13;&#10;    } finally {&#13;&#10;      setLoading(false);&#13;&#10;    }&#13;&#10;  };&#13;&#10;  &#13;&#10;  useEffect(() =&gt; {&#13;&#10;    fetchDocuments();&#13;&#10;  }, [fetchDocuments]);&#13;&#10;  &#13;&#10;  if (loading) {&#13;&#10;    return (&#13;&#10;      &lt;div className=&quot;flex items-center justify-center p-8&quot;&gt;&#13;&#10;        &lt;LoadingSpinner text=&quot;Đang tải...&quot; /&gt;&#13;&#10;      &lt;/div&gt;&#13;&#10;    );&#13;&#10;  }&#13;&#10;  &#13;&#10;  return (&#13;&#10;    &lt;div className=&quot;container mx-auto p-6&quot;&gt;&#13;&#10;      &lt;div className=&quot;flex items-center justify-between mb-6&quot;&gt;&#13;&#10;        &lt;h1 className=&quot;text-2xl font-bold&quot;&gt;Tài liệu dự án&lt;/h1&gt;&#13;&#10;        {canCreateItem(user, projectId) &amp;&amp; (&#13;&#10;          &lt;Button onClick={() =&gt; setIsDialogOpen(true)}&gt;&#13;&#10;            &lt;Plus className=&quot;h-4 w-4 mr-2&quot; /&gt;&#13;&#10;            Tạo tài liệu mới&#13;&#10;          &lt;/Button&gt;&#13;&#10;        )}&#13;&#10;      &lt;/div&gt;&#13;&#10;      &#13;&#10;      {documents.length === 0 ? (&#13;&#10;        &lt;Card&gt;&#13;&#10;          &lt;CardContent className=&quot;flex flex-col items-center justify-center py-12&quot;&gt;&#13;&#10;            &lt;FileText className=&quot;h-12 w-12 text-gray-400 mb-4&quot; /&gt;&#13;&#10;            &lt;h3 className=&quot;text-lg font-medium text-gray-900 mb-2&quot;&gt;Chưa có tài liệu nào&lt;/h3&gt;&#13;&#10;            &lt;p className=&quot;text-gray-500 mb-4&quot;&gt;Tạo tài liệu đầu tiên để bắt đầu&lt;/p&gt;&#13;&#10;            {canCreateItem(user, projectId) &amp;&amp; (&#13;&#10;              &lt;Button onClick={() =&gt; setIsDialogOpen(true)}&gt;&#13;&#10;                &lt;Plus className=&quot;h-4 w-4 mr-2&quot; /&gt;&#13;&#10;                Tạo tài liệu&#13;&#10;              &lt;/Button&gt;&#13;&#10;            )}&#13;&#10;          &lt;/CardContent&gt;&#13;&#10;        &lt;/Card&gt;&#13;&#10;      ) : (&#13;&#10;        &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4&quot;&gt;&#13;&#10;          {documents.map((document) =&gt; (&#13;&#10;            &lt;Card key={document.id} className=&quot;hover:shadow-md transition-shadow&quot;&gt;&#13;&#10;              &lt;CardContent className=&quot;p-6&quot;&gt;&#13;&#10;                &lt;div className=&quot;flex items-start justify-between&quot;&gt;&#13;&#10;                  &lt;div className=&quot;flex-1&quot;&gt;&#13;&#10;                    &lt;h3 &#13;&#10;                      className=&quot;font-semibold text-lg mb-2 cursor-pointer hover:text-blue-600 transition-colors&quot;&#13;&#10;                      onClick={() =&gt; handleViewDocument(document.id)}&#13;&#10;                    &gt;&#13;&#10;                      {document.title}&#13;&#10;                    &lt;/h3&gt;&#13;&#10;                    &lt;p className=&quot;text-gray-600 text-sm mb-4 line-clamp-2&quot;&gt;&#13;&#10;                      Tài liệu được tạo vào {new Date(document.createdAt).toLocaleDateString()}&#13;&#10;                    &lt;/p&gt;&#13;&#10;                    &lt;div className=&quot;flex items-center text-xs text-gray-500&quot;&gt;&#13;&#10;                      &lt;span&gt;Tạo bởi: {document.creator.name}&lt;/span&gt;&#13;&#10;                      &lt;span className=&quot;mx-2&quot;&gt;•&lt;/span&gt;&#13;&#10;                      &lt;span&gt;{new Date(document.createdAt).toLocaleDateString()}&lt;/span&gt;&#13;&#10;                    &lt;/div&gt;&#13;&#10;                  &lt;/div&gt;&#13;&#10;                &lt;/div&gt;&#13;&#10;                &lt;div className=&quot;flex gap-2 mt-4&quot;&gt;&#13;&#10;                  {/* If user is creator, show Delete button, else show View button */}&#13;&#10;                  {user?.id === document.creator.id ? (&#13;&#10;                    &lt;Button&#13;&#10;                      variant=&quot;destructive&quot;&#13;&#10;                      size=&quot;sm&quot;&#13;&#10;                      onClick={() =&gt; handleDeleteDocument(document.id)}&#13;&#10;                      className=&quot;flex-1&quot;&#13;&#10;                    &gt;&#13;&#10;                      &lt;Trash2 className=&quot;h-4 w-4 mr-2&quot; /&gt;&#13;&#10;                      Xóa&#13;&#10;                    &lt;/Button&gt;&#13;&#10;                  ) : (&#13;&#10;                    &lt;Button&#13;&#10;                      variant=&quot;outline&quot;&#13;&#10;                      size=&quot;sm&quot;&#13;&#10;                      onClick={() =&gt; handleViewDocument(document.id)}&#13;&#10;                      className=&quot;flex-1&quot;&#13;&#10;                    &gt;&#13;&#10;                      &lt;FileText className=&quot;h-4 w-4 mr-2&quot; /&gt;&#13;&#10;                      Xem&#13;&#10;                    &lt;/Button&gt;&#13;&#10;                  )}&#13;&#10;                  {canEditItem(user, document.creator.id) &amp;&amp; (&#13;&#10;                    &lt;Button&#13;&#10;                      variant=&quot;outline&quot;&#13;&#10;                      size=&quot;sm&quot;&#13;&#10;                      onClick={() =&gt; handleEditDocument(document.id)}&#13;&#10;                      className=&quot;flex-1&quot;&#13;&#10;                    &gt;&#13;&#10;                      &lt;Edit className=&quot;h-4 w-4 mr-2&quot; /&gt;&#13;&#10;                      Chỉnh sửa&#13;&#10;                    &lt;/Button&gt;&#13;&#10;                  )}&#13;&#10;                &lt;/div&gt;&#13;&#10;              &lt;/CardContent&gt;&#13;&#10;            &lt;/Card&gt;&#13;&#10;          ))}&#13;&#10;        &lt;/div&gt;&#13;&#10;      )}&#13;&#10;      &#13;&#10;      &lt;Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}&gt;&#13;&#10;        &lt;DialogContent&gt;&#13;&#10;          &lt;DialogHeader&gt;&#13;&#10;            &lt;DialogTitle&gt;Tạo tài liệu mới&lt;/DialogTitle&gt;&#13;&#10;          &lt;/DialogHeader&gt;&#13;&#10;          &#13;&#10;          &lt;form onSubmit={handleSubmit} className=&quot;space-y-4&quot;&gt;&#13;&#10;            &lt;div&gt;&#13;&#10;              &lt;Label htmlFor=&quot;title&quot;&gt;Tiêu đề tài liệu&lt;/Label&gt;&#13;&#10;              &lt;Input&#13;&#10;                id=&quot;title&quot;&#13;&#10;                value={formData.title}&#13;&#10;                onChange={(e) =&gt; setFormData({ ...formData, title: e.target.value })}&#13;&#10;                placeholder=&quot;Nhập tiêu đề tài liệu&quot;&#13;&#10;                required&#13;&#10;              /&gt;&#13;&#10;            &lt;/div&gt;&#13;&#10;            &#13;&#10;            &lt;div&gt;&#13;&#10;              &lt;Label htmlFor=&quot;content&quot;&gt;Nội dung&lt;/Label&gt;&#13;&#10;              &lt;Textarea&#13;&#10;                id=&quot;content&quot;&#13;&#10;                value={formData.content}&#13;&#10;                onChange={(e) =&gt; setFormData({ ...formData, content: e.target.value })}&#13;&#10;                placeholder=&quot;Nhập nội dung tài liệu&quot;&#13;&#10;                rows={3}&#13;&#10;              /&gt;&#13;&#10;            &lt;/div&gt;&#13;&#10;            &#13;&#10;            &lt;DialogFooter&gt;&#13;&#10;              &lt;Button type=&quot;submit&quot; disabled={loading}&gt;&#13;&#10;                {loading ? &quot;Đang tạo...&quot; : &quot;Tạo tài liệu&quot;}&#13;&#10;              &lt;/Button&gt;&#13;&#10;              &lt;Button type=&quot;button&quot; variant=&quot;outline&quot; onClick={() =&gt; setIsDialogOpen(false)}&gt;&#13;&#10;                Hủy&#13;&#10;              &lt;/Button&gt;&#13;&#10;            &lt;/DialogFooter&gt;&#13;&#10;          &lt;/form&gt;&#13;&#10;        &lt;/DialogContent&gt;&#13;&#10;      &lt;/Dialog&gt;&#13;&#10;    &lt;/div&gt;&#13;&#10;  );&#13;&#10;};&#13;&#10;&#13;&#10;export default ProjectDocumentsPage;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>